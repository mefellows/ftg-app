# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.102.0"

default_platform :ios

def increment_android_version_code(gradle_build: 'android/app/build.gradle')
  sh %Q{cd ../ && echo "$(awk '{sub(/versionCode [[:digit:]]+$/,"versionCode "$2+1)}1' #{gradle_build})" > #{gradle_build} && cd -}
end

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight and Google Play Store"
  desc "This will also make sure the profile is up to date"
  lane :beta do

    increment_build_number(
      xcodeproj: "./ios/yimp.xcodeproj"
    )

    match(type: "appstore") # more information: https://codesigning.guide

    gym(
      scheme: "yimp", # Build your app - more options available
      project: "./ios/yimp.xcodeproj"
    )

    increment_android_version_code(
      gradle_build: 'android/app/build.gradle'
    )

    gradle(task: 'clean', project_dir: "android") # <- Fixes build number issues
    gradle(
      task: 'assemble',
      build_type: 'Release',
      project_dir: 'android'
    )

    supply( # Play store beta
      track: 'alpha',
      package_name: 'au.com.onegeek.yimp'
    )

    pilot # App store beta

    slack(
      message: "YIMP successfully released to TestFlight and Beta Google App store",
      channel: "#gullyapps"
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App + Play Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "yimp") # Build your app - more options available
    deliver(force: true)
    gradle(
      task: 'assemble',
      build_type: 'Release'
    )
    supply # Uploads the APK built in the gradle step above
    # frameit

    slack(
      message: "YIMP successfully released to App and Google Play",
      channel: "#gullyapps"
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
